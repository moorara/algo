package parser

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestTableStringer(t *testing.T) {
	tests := []struct {
		name               string
		ts                 *TableStringer[string, string]
		expectedSubstrings []string
	}{
		{
			name: "OK",
			ts: &TableStringer[string, string]{
				K1Title:  "State",
				K1Values: []string{"S₀", "S₁", "S₂", "S₃", "S₄", "S₅", "S₆", "S₇", "S₈", "S₉"},
				K2Title:  "Input",
				K2Values: []string{"I₀", "I₁", "I₂", "I₃", "I₄", "I₅", "I₆", "I₇", "I₈", "I₉"},
				GetEntry: func(k1 string, k2 string) string {
					return fmt.Sprintf("next(%s,%s)", k1, k2)
				},
			},
			expectedSubstrings: []string{
				`┌───────┬───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐`,
				`│       │                                                                   Input                                                                   │`,
				`│ State ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤`,
				`│       │     I₀      │     I₁      │     I₂      │     I₃      │     I₄      │     I₅      │     I₆      │     I₇      │     I₈      │     I₉      │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₀   │ next(S₀,I₀) │ next(S₀,I₁) │ next(S₀,I₂) │ next(S₀,I₃) │ next(S₀,I₄) │ next(S₀,I₅) │ next(S₀,I₆) │ next(S₀,I₇) │ next(S₀,I₈) │ next(S₀,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₁   │ next(S₁,I₀) │ next(S₁,I₁) │ next(S₁,I₂) │ next(S₁,I₃) │ next(S₁,I₄) │ next(S₁,I₅) │ next(S₁,I₆) │ next(S₁,I₇) │ next(S₁,I₈) │ next(S₁,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₂   │ next(S₂,I₀) │ next(S₂,I₁) │ next(S₂,I₂) │ next(S₂,I₃) │ next(S₂,I₄) │ next(S₂,I₅) │ next(S₂,I₆) │ next(S₂,I₇) │ next(S₂,I₈) │ next(S₂,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₃   │ next(S₃,I₀) │ next(S₃,I₁) │ next(S₃,I₂) │ next(S₃,I₃) │ next(S₃,I₄) │ next(S₃,I₅) │ next(S₃,I₆) │ next(S₃,I₇) │ next(S₃,I₈) │ next(S₃,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₄   │ next(S₄,I₀) │ next(S₄,I₁) │ next(S₄,I₂) │ next(S₄,I₃) │ next(S₄,I₄) │ next(S₄,I₅) │ next(S₄,I₆) │ next(S₄,I₇) │ next(S₄,I₈) │ next(S₄,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₅   │ next(S₅,I₀) │ next(S₅,I₁) │ next(S₅,I₂) │ next(S₅,I₃) │ next(S₅,I₄) │ next(S₅,I₅) │ next(S₅,I₆) │ next(S₅,I₇) │ next(S₅,I₈) │ next(S₅,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₆   │ next(S₆,I₀) │ next(S₆,I₁) │ next(S₆,I₂) │ next(S₆,I₃) │ next(S₆,I₄) │ next(S₆,I₅) │ next(S₆,I₆) │ next(S₆,I₇) │ next(S₆,I₈) │ next(S₆,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₇   │ next(S₇,I₀) │ next(S₇,I₁) │ next(S₇,I₂) │ next(S₇,I₃) │ next(S₇,I₄) │ next(S₇,I₅) │ next(S₇,I₆) │ next(S₇,I₇) │ next(S₇,I₈) │ next(S₇,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₈   │ next(S₈,I₀) │ next(S₈,I₁) │ next(S₈,I₂) │ next(S₈,I₃) │ next(S₈,I₄) │ next(S₈,I₅) │ next(S₈,I₆) │ next(S₈,I₇) │ next(S₈,I₈) │ next(S₈,I₉) │`,
				`├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤`,
				`│  S₉   │ next(S₉,I₀) │ next(S₉,I₁) │ next(S₉,I₂) │ next(S₉,I₃) │ next(S₉,I₄) │ next(S₉,I₅) │ next(S₉,I₆) │ next(S₉,I₇) │ next(S₉,I₈) │ next(S₉,I₉) │`,
				`└───────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┘`,
			},
		},
	}

	for _, tc := range tests {
		t.Run(tc.name, func(t *testing.T) {
			s := tc.ts.String()

			for _, expectedSubstring := range tc.expectedSubstrings {
				assert.Contains(t, s, expectedSubstring)
			}
		})
	}
}
